{"version":3,"sources":["Component/Header/Header.js","Component/Header/HeaderMobile.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","HeaderMobile","React","useState","localStorage","getItem","value","setValue","tabBar","button","buttonMenu","switchMode","darkMode","setDarkmode","length","setItem","className","href","onClick","e","preventDefault","handleClick","App","change","setChange","y","window","screen","width","x","height","setScreen","useEffect","addEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAUeA,MARf,WACI,OACI,8BACI,6BAAI,mBAAGC,MAAM,sB,MC4EVC,MA1Ef,WAAyB,IAAD,EACKC,IAAMC,SAASC,aAAaC,QAAQ,SADzC,mBACbC,EADa,KACPC,EADO,OAEYL,IAAMC,SAAS,CAC3CK,OAASJ,aAAaC,QAAQ,UAC9BI,OAAQL,aAAaC,QAAQ,UAC7BK,WAAYN,aAAaC,QAAQ,cACjCM,WAAaP,aAAaC,QAAQ,gBANlB,mBAEbO,EAFa,KAEHC,EAFG,KAiDpB,OAxC2B,GAAvBT,aAAaU,SACbV,aAAaW,QAAQ,OAAO,eAC5BX,aAAaW,QAAQ,SAAS,eAC9BX,aAAaW,QAAQ,SAAS,eAC9BX,aAAaW,QAAQ,aAAa,mBAClCX,aAAaW,QAAQ,aAAa,SAoClC,sBAAKC,UAAWJ,EAASJ,OAAzB,UACI,qBAAKQ,UAAWJ,EAASH,OAAzB,SACI,mBAAGT,MAAM,sBAEb,qBAAKgB,UAAWJ,EAASH,OAAzB,SACI,mBAAGT,MAAM,kBAEb,qBAAKgB,UAAWJ,EAASF,WAAzB,SACI,mBAAGV,MAAM,sBAEb,qBAAKgB,UAAWJ,EAASH,OAAzB,SACI,mBAAGT,MAAM,mBAEb,mBACAiB,KAAK,IACLC,QAAS,SAACC,GAAD,OAhDjB,SAAqBA,GACjBA,EAAEC,iBACW,cAATd,GACAC,EAAS,eACTH,aAAaW,QAAQ,OAAO,eAC5BX,aAAaW,QAAQ,SAAS,eAC9BX,aAAaW,QAAQ,SAAS,eAC9BX,aAAaW,QAAQ,aAAa,mBAClCX,aAAaW,QAAQ,aAAa,QAClCF,EAAY,CACRL,OAAgB,cAChBC,OAAgB,cAChBC,WAAgB,kBAChBC,WAAgB,WAGpBJ,EAAS,cACTH,aAAaW,QAAQ,OAAO,cAC5BX,aAAaW,QAAQ,SAAS,UAC9BX,aAAaW,QAAQ,SAAS,UAC9BX,aAAaW,QAAQ,aAAa,cAClCX,aAAaW,QAAQ,aAAa,SAClCF,EAAY,CACRL,OAAgB,SAChBC,OAAgB,SAChBC,WAAgB,aAChBC,WAAgB,WAsBNU,CAAYF,IAC1BH,UAAWJ,EAASD,WAHpB,SAKI,mBAAGX,MAAOM,UC/CXgB,MAvBf,WAAgB,IAAD,EACcpB,IAAMC,UAAS,GAD7B,mBACNoB,EADM,KACCC,EADD,OAEctB,IAAMC,SAAS,CACxCsB,EAAIC,OAAOC,OAAOC,MAClBC,EAAIH,OAAOC,OAAOG,SAJP,mBAENH,EAFM,KAECI,EAFD,KAab,OANA7B,IAAM8B,WAAU,WACdN,OAAOO,iBAAiB,UAAU,WAChCF,EAAU,CAAEN,EAAIC,OAAOC,OAAOC,MAAOC,EAAIH,OAAOC,OAAOG,cAEzD,CAACP,EAAOC,IAGR,gCACKG,EAAOF,EAAI,IAAM,cAAC,EAAD,IAAoB,GACpC,gDACA,yEACDE,EAAOF,EAAI,IAAM,cAAC,EAAD,IAAgC,OCX3CS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81e586fb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <h1><i class=\"fab fa-apple\"></i></h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport '../Header/headerMobile.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction HeaderMobile() {\r\n    const [value,setValue] = React.useState(localStorage.getItem('mode'));\r\n    const [darkMode, setDarkmode] = React.useState({\r\n        tabBar : localStorage.getItem('tapBar'),\r\n        button :localStorage.getItem('button'),\r\n        buttonMenu :localStorage.getItem('buttonMenu'),\r\n        switchMode : localStorage.getItem('switchMode')\r\n    });\r\n\r\n    if (localStorage.length == 0 ) {\r\n        localStorage.setItem('mode','fas fa-moon');\r\n        localStorage.setItem('tapBar','tapBarLight');\r\n        localStorage.setItem('button','buttonLight');\r\n        localStorage.setItem('buttonMenu','buttonMenuLight');\r\n        localStorage.setItem('switchMode','Dark');\r\n    }\r\n\r\n    function handleClick(e){\r\n        e.preventDefault();\r\n        if (value == 'fas fa-sun') {\r\n            setValue('fas fa-moon');\r\n            localStorage.setItem('mode','fas fa-moon');\r\n            localStorage.setItem('tapBar','tapBarLight');\r\n            localStorage.setItem('button','buttonLight');\r\n            localStorage.setItem('buttonMenu','buttonMenuLight');\r\n            localStorage.setItem('switchMode','Dark');\r\n            setDarkmode({\r\n                tabBar :        \"tapBarLight\",\r\n                button :        \"buttonLight\",\r\n                buttonMenu :    \"buttonMenuLight\",\r\n                switchMode :    \"Dark\"\r\n            })\r\n        }else{\r\n            setValue('fas fa-sun');\r\n            localStorage.setItem('mode','fas fa-sun');\r\n            localStorage.setItem('tapBar','tapBar');\r\n            localStorage.setItem('button','button');\r\n            localStorage.setItem('buttonMenu','buttonMenu');\r\n            localStorage.setItem('switchMode','Light');\r\n            setDarkmode({\r\n                tabBar :        \"tapBar\",\r\n                button :        \"button\",\r\n                buttonMenu :    \"buttonMenu\",\r\n                switchMode :    \"Light\"\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className={darkMode.tabBar}>\r\n            <div className={darkMode.button}>\r\n                <i class=\"fas fa-envelope\"></i>\r\n            </div>\r\n            <div className={darkMode.button}>\r\n                <i class=\"fas fa-home\"></i>\r\n            </div>\r\n            <div className={darkMode.buttonMenu}>\r\n                <i class=\"fas fa-th-large\"></i>\r\n            </div>\r\n            <div className={darkMode.button}>\r\n                <i class=\"fas fa-phone\"></i>\r\n            </div>\r\n            <a \r\n            href=\"#\" \r\n            onClick={(e)=>handleClick(e)}\r\n            className={darkMode.switchMode}\r\n            >\r\n                <i class={value}></i>\r\n            </a>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderMobile\r\n","import './App.css';\nimport React from 'react';\nimport Header from './Component/Header/Header';\nimport HeaderMobile from './Component/Header/HeaderMobile';\n\nfunction App() {\n  const [change,setChange] = React.useState(false);\n  const [screen,setScreen] = React.useState({\n    y : window.screen.width,\n    x : window.screen.height\n  });\n\n  React.useEffect(function() {\n    window.addEventListener('resize', function(){\n      setScreen({ y : window.screen.width, x : window.screen.height});\n    });\n  },[change,setChange])\n\n  return (\n    <div>\n        {screen.y > 800 ? <Header></Header> : \"\"}\n          <h1>Fontaine Brian</h1>\n          <h2>Concepteur d√©veloppeur d'application</h2>\n        {screen.y < 800 ? <HeaderMobile></HeaderMobile> : \"\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}